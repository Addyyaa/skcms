{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cc9ccd60_65b6cffb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 11059
      },
      "writtenOn": "2023-10-26T13:53:06Z",
      "side": 1,
      "message": "Please update `BAZEL.md`. It still says TODO(lovisolo)",
      "revId": "f97537ebdadae972856bb7baeff656215aab1ff4",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65ac9b26_dae63aa3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 11059
      },
      "writtenOn": "2023-10-26T13:53:20Z",
      "side": 1,
      "message": "Active",
      "parentUuid": "cc9ccd60_65b6cffb",
      "revId": "f97537ebdadae972856bb7baeff656215aab1ff4",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb5d8887_ead7e0af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 11059
      },
      "writtenOn": "2023-10-26T13:57:08Z",
      "side": 1,
      "message": "I\u0027m trying this now and I noticed it\u0027s downloading two separate Clang+LLVM versions, for different architectures. Is this intentional? I would have assumed we would at least want to stick to one version.\n\n    Fetching https://github.com/.../llvmorg-15.0.1/clang+llvm-15.0.1-arm64-apple-darwin21.0.tar.xz; 407,227,200B 123s\n    Fetching https://github.com/.../llvmorg-13.0.0/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz; 340,613,637B 123s",
      "revId": "f97537ebdadae972856bb7baeff656215aab1ff4",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9543bda1_5b432ea8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 10009
      },
      "writtenOn": "2023-10-26T20:32:08Z",
      "side": 1,
      "message": "Addressed here: https://skia-review.googlesource.com/c/skcms/+/771516.",
      "parentUuid": "65ac9b26_dae63aa3",
      "revId": "f97537ebdadae972856bb7baeff656215aab1ff4",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5b58ae0_497eda85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 10009
      },
      "writtenOn": "2023-10-26T20:32:08Z",
      "side": 1,
      "message": "I noticed that too. I\u0027m not sure why it downloads the Linux toolchain as well as the Mac one. Things are wired almost identically as in the Skia repository, where we only seem to download the toolchains we need, unless otherwise requested (e.g. `--config\u003dpixel_5` will cause Bazel to download the NDK toolchain).\n\nPossible explanations:\n\n1. There might be a subtle difference in the way toolchains/platforms are configured in this repo vs. in the Skia repo.\n\n2. The two repos use different Bazel versions (5.3.0 vs 6.3.2 as per the SkCMS and Skia `//.bazelversion` files, respectively). Maybe 5.3.0 and 6.3.2 handle external repositories differently?\n\nI need to investigate this more.",
      "parentUuid": "cb5d8887_ead7e0af",
      "revId": "f97537ebdadae972856bb7baeff656215aab1ff4",
      "serverId": "5086850b-e599-37d2-8ec8-ff16aeccbf02"
    }
  ]
}